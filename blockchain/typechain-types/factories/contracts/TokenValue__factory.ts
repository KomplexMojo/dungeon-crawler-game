/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TokenValue,
  TokenValueInterface,
} from "../../contracts/TokenValue";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
    ],
    name: "setNFTContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611fd6380380611fd683398181016040528101906100329190610646565b806040518060400160405280600a81526020017f546f6b656e56616c7565000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f54564c000000000000000000000000000000000000000000000000000000000081525081600390816100ae91906108cc565b5080600490816100be91906108cc565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101335760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012a91906109ad565b60405180910390fd5b6101428161015a60201b60201c565b50610153818361022060201b60201c565b5050610b2f565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102925760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161028991906109ad565b60405180910390fd5b6102a4600083836102a860201b60201c565b5050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480156103325750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036990610a4b565b60405180910390fd5b61038383838361038860201b60201c565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103da5780600260008282546103ce9190610a9a565b925050819055506104ad565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610466578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161045d93929190610add565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104f65780600260008282540392505081905550610543565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105a09190610b14565b60405180910390a3505050565b600080fd5b6000819050919050565b6105c5816105b2565b81146105d057600080fd5b50565b6000815190506105e2816105bc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610613826105e8565b9050919050565b61062381610608565b811461062e57600080fd5b50565b6000815190506106408161061a565b92915050565b6000806040838503121561065d5761065c6105ad565b5b600061066b858286016105d3565b925050602061067c85828601610631565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061070757607f821691505b60208210810361071a576107196106c0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026107827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610745565b61078c8683610745565b95508019841693508086168417925050509392505050565b6000819050919050565b60006107c96107c46107bf846105b2565b6107a4565b6105b2565b9050919050565b6000819050919050565b6107e3836107ae565b6107f76107ef826107d0565b848454610752565b825550505050565b600090565b61080c6107ff565b6108178184846107da565b505050565b5b8181101561083b57610830600082610804565b60018101905061081d565b5050565b601f8211156108805761085181610720565b61085a84610735565b81016020851015610869578190505b61087d61087585610735565b83018261081c565b50505b505050565b600082821c905092915050565b60006108a360001984600802610885565b1980831691505092915050565b60006108bc8383610892565b9150826002028217905092915050565b6108d582610686565b67ffffffffffffffff8111156108ee576108ed610691565b5b6108f882546106ef565b61090382828561083f565b600060209050601f8311600181146109365760008415610924578287015190505b61092e85826108b0565b865550610996565b601f19841661094486610720565b60005b8281101561096c57848901518255600182019150602085019450602081019050610947565b868310156109895784890151610985601f891682610892565b8355505b6001600288020188555050505b505050505050565b6109a781610608565b82525050565b60006020820190506109c2600083018461099e565b92915050565b600082825260208201905092915050565b7f546f6b656e73206c6f636b656420616e64206e6f6e2d7472616e73666572616260008201527f6c65000000000000000000000000000000000000000000000000000000000000602082015250565b6000610a356022836109c8565b9150610a40826109d9565b604082019050919050565b60006020820190508181036000830152610a6481610a28565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610aa5826105b2565b9150610ab0836105b2565b9250828201905080821115610ac857610ac7610a6b565b5b92915050565b610ad7816105b2565b82525050565b6000606082019050610af2600083018661099e565b610aff6020830185610ace565b610b0c6040830184610ace565b949350505050565b6000602082019050610b296000830184610ace565b92915050565b61149880610b3e6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063a9059cbb11610066578063a9059cbb14610289578063d56d229d146102b9578063dd62ed3e146102d7578063f2fde38b1461030757610100565b80638da5cb5b1461021557806395d89b41146102335780639dc29fac14610251578063a7ccabdf1461026d57610100565b8063313ce567116100d3578063313ce567146101a157806340c10f19146101bf57806370a08231146101db578063715018a61461020b57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d610323565b60405161011a919061105a565b60405180910390f35b61013d60048036038101906101389190611115565b6103b5565b60405161014a9190611170565b60405180910390f35b61015b6103d8565b604051610168919061119a565b60405180910390f35b61018b600480360381019061018691906111b5565b6103e2565b6040516101989190611170565b60405180910390f35b6101a9610411565b6040516101b69190611224565b60405180910390f35b6101d960048036038101906101d49190611115565b61041a565b005b6101f560048036038101906101f0919061123f565b610430565b604051610202919061119a565b60405180910390f35b610213610478565b005b61021d61048c565b60405161022a919061127b565b60405180910390f35b61023b6104b6565b604051610248919061105a565b60405180910390f35b61026b60048036038101906102669190611115565b610548565b005b6102876004803603810190610282919061123f565b61055e565b005b6102a3600480360381019061029e9190611115565b6105aa565b6040516102b09190611170565b60405180910390f35b6102c16105cd565b6040516102ce919061127b565b60405180910390f35b6102f160048036038101906102ec9190611296565b6105f3565b6040516102fe919061119a565b60405180910390f35b610321600480360381019061031c919061123f565b61067a565b005b60606003805461033290611305565b80601f016020809104026020016040519081016040528092919081815260200182805461035e90611305565b80156103ab5780601f10610380576101008083540402835291602001916103ab565b820191906000526020600020905b81548152906001019060200180831161038e57829003601f168201915b5050505050905090565b6000806103c0610700565b90506103cd818585610708565b600191505092915050565b6000600254905090565b6000806103ed610700565b90506103fa85828561071a565b6104058585856107af565b60019150509392505050565b60006012905090565b6104226108a3565b61042c828261092a565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104806108a3565b61048a60006109ac565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104c590611305565b80601f01602080910402602001604051908101604052809291908181526020018280546104f190611305565b801561053e5780601f106105135761010080835404028352916020019161053e565b820191906000526020600020905b81548152906001019060200180831161052157829003601f168201915b5050505050905090565b6105506108a3565b61055a8282610a72565b5050565b6105666108a3565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806105b5610700565b90506105c28185856107af565b600191505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6106826108a3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106f45760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106eb919061127b565b60405180910390fd5b6106fd816109ac565b50565b600033905090565b6107158383836001610af4565b505050565b600061072684846105f3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156107a95781811015610799578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161079093929190611336565b60405180910390fd5b6107a884848484036000610af4565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108215760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610818919061127b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108935760006040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161088a919061127b565b60405180910390fd5b61089e838383610ccb565b505050565b6108ab610700565b73ffffffffffffffffffffffffffffffffffffffff166108c961048c565b73ffffffffffffffffffffffffffffffffffffffff1614610928576108ec610700565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161091f919061127b565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361099c5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610993919061127b565b60405180910390fd5b6109a860008383610ccb565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ae45760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610adb919061127b565b60405180910390fd5b610af082600083610ccb565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b665760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b5d919061127b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bd85760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bcf919061127b565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610cc5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cbc919061119a565b60405180910390a35b50505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16148015610d555750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b15610d95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8c906113df565b60405180910390fd5b610da0838383610da5565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610df7578060026000828254610deb919061142e565b92505081905550610eca565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e83578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e7a93929190611336565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f135780600260008282540392505081905550610f60565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fbd919061119a565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611004578082015181840152602081019050610fe9565b60008484015250505050565b6000601f19601f8301169050919050565b600061102c82610fca565b6110368185610fd5565b9350611046818560208601610fe6565b61104f81611010565b840191505092915050565b600060208201905081810360008301526110748184611021565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110ac82611081565b9050919050565b6110bc816110a1565b81146110c757600080fd5b50565b6000813590506110d9816110b3565b92915050565b6000819050919050565b6110f2816110df565b81146110fd57600080fd5b50565b60008135905061110f816110e9565b92915050565b6000806040838503121561112c5761112b61107c565b5b600061113a858286016110ca565b925050602061114b85828601611100565b9150509250929050565b60008115159050919050565b61116a81611155565b82525050565b60006020820190506111856000830184611161565b92915050565b611194816110df565b82525050565b60006020820190506111af600083018461118b565b92915050565b6000806000606084860312156111ce576111cd61107c565b5b60006111dc868287016110ca565b93505060206111ed868287016110ca565b92505060406111fe86828701611100565b9150509250925092565b600060ff82169050919050565b61121e81611208565b82525050565b60006020820190506112396000830184611215565b92915050565b6000602082840312156112555761125461107c565b5b6000611263848285016110ca565b91505092915050565b611275816110a1565b82525050565b6000602082019050611290600083018461126c565b92915050565b600080604083850312156112ad576112ac61107c565b5b60006112bb858286016110ca565b92505060206112cc858286016110ca565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061131d57607f821691505b6020821081036113305761132f6112d6565b5b50919050565b600060608201905061134b600083018661126c565b611358602083018561118b565b611365604083018461118b565b949350505050565b7f546f6b656e73206c6f636b656420616e64206e6f6e2d7472616e73666572616260008201527f6c65000000000000000000000000000000000000000000000000000000000000602082015250565b60006113c9602283610fd5565b91506113d48261136d565b604082019050919050565b600060208201905081810360008301526113f8816113bc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611439826110df565b9150611444836110df565b925082820190508082111561145c5761145b6113ff565b5b9291505056fea26469706673582212202a136e59463d58bdbf2aa3622fab0d87da428480b517ecdad6ee68fe600ca85564736f6c634300081c0033";

type TokenValueConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenValueConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenValue__factory extends ContractFactory {
  constructor(...args: TokenValueConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialSupply: BigNumberish,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialSupply,
      initialOwner,
      overrides || {}
    );
  }
  override deploy(
    initialSupply: BigNumberish,
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialSupply,
      initialOwner,
      overrides || {}
    ) as Promise<
      TokenValue & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TokenValue__factory {
    return super.connect(runner) as TokenValue__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenValueInterface {
    return new Interface(_abi) as TokenValueInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TokenValue {
    return new Contract(address, _abi, runner) as unknown as TokenValue;
  }
}
